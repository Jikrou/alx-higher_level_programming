# Test cases for the class BaseGeometry.
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> geometry = BaseGeometry()

>>> geometry.integer_validator("my_int", 12)

>>> geometry.integer_validator("width", 89)

>>> geometry.integer_validator("name", "John")
Traceback (most recent call last):
   ...
TypeError: name must be an integer

>>> geometry.integer_validator("age", 0)
Traceback (most recent call last):
   ...
ValueError: age must be greater than 0

>>> geometry.area()
Traceback (most recent call last):
   ...
Exception: area() is not implemented

>>> geometry.integer_validator()
Traceback (most recent call last):
   ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> geometry.integer_validator("age")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geometry.integer_validator("age", (4,))
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> geometry.integer_validator("age", [3])
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> geometry.integer_validator("age", True)
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> geometry.integer_validator("age", {3, 5})
Traceback (most recent call last):
	...
TypeError: age must be an integer

>>> geometry.integer_validator("age", None)
Traceback (most recent call last):
	...
TypeError: age must be an integer
